## {#coding-complexities data-menu-title="Coding complexities"}

:::: {.columns .v-center-container}
::: {.column width="10%"}
:::
::: {.column width="40%"}
[Complexities <br> in coding]{.slide-title}
:::
::: {.column width="50%"}
- Taxonomic  
- Temporal  
- Spatial   
:::
::::


## {#taxonomy-01 data-menu-title="Taxonomy 01"}

:::: {.columns .v-center-container}
::: {.column width="25%"}
[Taxonomic <br> challenges]{.slide-title}
Cleaning provided taxon names  
:::

::: {.column width="75%" .fragment}
  
```{r}
#| echo: true
#| code-line-numbers: "|3-11|12-13|"

clean_names <- function(name) {
  cleaned_name <- name |>
    gsub("\u00A0", " ", .) |>      # remove non-ASCII whitespaces (NBSP)
    gsub("\u200B", " ", .) |>      # ... (ZWSP)
    gsub("\n", " ", .) |>          # replace line breaks with spaces
    gsub(";", ",", .) |>           # replace semi-colons with commas
    gsub(" ,", ",", .) |>          # remove spaces before commas
    gsub("\\s{2,}", " ", .) |>     # remove multiple spaces
    gsub(",$", "", .) |>           # remove trailing commas
    gsub(" +$", "", .) |>          # remove trailing spaces
    gsub(",(\\w)", ", \\1", .) |>  # add spaces between commas and text
    gsub(" sp\\.", "", .) |>
    gsub(" spp\\.", "", .) |>      # remove spp. and sp. abbreviations
    str_squish(.)
  
  return(cleaned_name)
}
```
:::
::::


## {#taxonomy-02 data-menu-title="Taxonomy 02"}

:::: {.columns .v-center-container}
::: {.column width="25%"}
[Taxonomic <br> challenges]{.slide-title}
Alerting on different ranks
:::
::: {.column width="75%" .fragment}

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "|1|8|17|"

fields <- c("genus", "species", "subspecies", "scientificName")

request_data() |>
  galah_filter(firstLoadedDate >= upload_date_start,
               firstLoadedDate <= upload_date_end,
               eventDate >= event_date_start,
               eventDate <= event_date_end,
               {{field}} == search_terms) |>
  galah_select(scientificName, vernacularName,
               genus, species, subspecies,
               decimalLatitude, decimalLongitude,
               cl22, cl10923, cl1048, cl966, cl21,
               firstLoadedDate, basisOfRecord,
               group = c("basic", "media")) |>
  collect() |>
  mutate(match = field,
         search_term = .data[[field]],
         across(-c(images, sounds, videos), as.character),
         across(c(images, sounds, videos), as.list))
```

:::
::::


## {#temporal data-menu-title="Temporal"}

:::: {.columns .v-center-container}
::: {.column width="25%"}
[Temporal <br> challenges]{.slide-title}
:::
::: {.column width="75%" .fragment}

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "|2-3|4-5|"

request_data() |>
  galah_filter(firstLoadedDate >= upload_date_start,
               firstLoadedDate <= upload_date_end,
               eventDate >= event_date_start,
               eventDate <= event_date_end,
               {{field}} == search_terms) |>
  galah_select(scientificName, vernacularName,
               genus, species, subspecies,
               decimalLatitude, decimalLongitude,
               cl22, cl10923, cl1048, cl966, cl21,
               firstLoadedDate, basisOfRecord,
               group = c("basic", "media")) |>
  collect() |>
  mutate(match = field,
         search_term = .data[[field]],
         across(-c(images, sounds, videos), as.character),
         across(c(images, sounds, videos), as.list))
```
:::
::::


## {#spatial data-menu-title="Spatial"}
:::: {.columns .v-center-container}
::: {.column width="25%"}
[Spatial <br> challenges]{.slide-title}
:::
::: {.column width="75%" .fragment}
```{r}
library(gt)

readRDS("data/demo_list.rds") |> 
  gt() |> 
  opt_table_font(font = list(google_font("Lato"),
                             default_fonts())) |>
  opt_row_striping() |>
  tab_options(row.striping.background_color = "#fffbf0",
              table_body.hlines.color = "transparent",
              column_labels.background.color = "#7E98A8",
              table.font.size = 24,
              data_row.padding = 2.4) |> 
  as_raw_html()
```
:::
::::


## {#modular-code-01 data-menu-title="Modular code 01"}

:::: {.columns .v-center-container}
::: {.column width="10%"}
:::
::: {.column width="40%"}
[Broader <br> insights]{.slide-title}  
Modular code 
:::
::: {.column width="50%"}
-	Supports changing functionality
-	Easy debugging
-	Consistent & neutral code design 
:::
::::


## {#modular-code-02 data-menu-title="Modular code 02"}

:::: {.columns .v-center-container}
::: {.column width="25%"}
[Broader <br> insights]{.slide-title}  
Modular code 
:::
::: {.column width="75%" .fragment}

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "|3-6|12|"

occ_list <- species_records |>
  filter(!is.na(decimalLatitude) & !is.na(decimalLongitude)) |>
  identify_aus() |>
  identify_state() |>
  identify_shape(shapes_path = shapes_path) |>
  identify_lga() |>
  filter(state == "AUS" |
      (!is.na(state) & flagged_state) |
      (!is.na(lga) & flagged_lga) |
      (!is.na(shape) & flagged_shape)) |>
  select(-flagged_state,-flagged_lga,-flagged_shape) |>
  exclude_records() |>
  as_tibble()
```
:::
::::

  